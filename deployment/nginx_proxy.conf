# TeAI リバースプロキシ設定

# ユーザーマッピング用のマップ
map $cookie_session_id $user_from_session {
    default "";
    # 実際の環境では、ここにセッションIDからユーザーIDへのマッピングが必要
    # MVPでは簡易的に実装
    "~.*" $http_x_user_id;
}

# アップストリームサーバーの定義
upstream teai-instance-1 {
    server INSTANCE_1_IP:3000;
}

upstream teai-instance-2 {
    server INSTANCE_2_IP:3000;
}

# HTTPサーバー設定
server {
    listen 80;
    server_name _;  # すべてのホスト名に対応

    # HTTPSにリダイレクト
    return 301 https://$host$request_uri;
}

# HTTPSサーバー設定
server {
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/letsencrypt/live/teai.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/teai.io/privkey.pem;

    # 文字エンコーディングの設定
    charset utf-8;
    source_charset utf-8;

    # ルートへのアクセス
    location / {
        # 認証チェック
        auth_request /auth;
        error_page 401 = /login/;

        # 認証成功時のプロキシ設定
        auth_request_set $auth_user_id $upstream_http_x_user_id;

        # ユーザーIDに基づいてバックエンドを選択
        set $backend "teai-instance-1";  # デフォルト

        if ($auth_user_id = "user1") {
            set $backend "teai-instance-1";
        }

        if ($auth_user_id = "user2") {
            set $backend "teai-instance-2";
        }

        # プロキシ設定
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-User-ID $auth_user_id;

        # WebSocketのサポート
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # タイムアウト設定
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }

    # APIリクエスト
    location /api/ {
        # 認証チェック
        auth_request /auth;
        error_page 401 = /login/;

        # 認証成功時のプロキシ設定
        auth_request_set $auth_user_id $upstream_http_x_user_id;

        # ユーザーIDに基づいてバックエンドを選択
        set $backend "teai-instance-1";  # デフォルト

        if ($auth_user_id = "user1") {
            set $backend "teai-instance-1";
        }

        if ($auth_user_id = "user2") {
            set $backend "teai-instance-2";
        }

        # プロキシ設定
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-User-ID $auth_user_id;
    }

    # WebSocket接続
    location /socket.io/ {
        # 認証チェック
        auth_request /auth;
        error_page 401 = /login/;

        # 認証成功時のプロキシ設定
        auth_request_set $auth_user_id $upstream_http_x_user_id;

        # ユーザーIDに基づいてバックエンドを選択
        set $backend "teai-instance-1";  # デフォルト

        if ($auth_user_id = "user1") {
            set $backend "teai-instance-1";
        }

        if ($auth_user_id = "user2") {
            set $backend "teai-instance-2";
        }

        # WebSocketプロキシ設定
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-User-ID $auth_user_id;

        # タイムアウト設定
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }

    # 認証エンドポイント
    location = /auth {
        internal;
        proxy_pass http://127.0.0.1:8080/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }

    # ログインPOSTリクエスト
    location = /login {
        # GETリクエストの場合はリダイレクト
        if ($request_method = GET) {
            return 301 /login/;
        }

        # POSTリクエストの場合は認証サーバーに転送
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type "application/json";
    }

    # ログインページ
    location /login/ {
        root /var/www/html;
        index index.html;
        add_header Content-Type "text/html; charset=utf-8";
    }

    # 静的ファイル
    location /static/ {
        root /var/www/html;
    }
}